var searchIndex = JSON.parse('{\
"jbscheme":{"doc":"JB Scheme Language Documentation","t":[13,13,13,13,13,13,13,13,13,13,13,13,3,3,6,4,3,6,3,4,6,13,13,13,13,13,13,17,13,3,13,13,13,13,13,13,13,13,3,3,8,3,4,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["ApplyError","AssertionError","Bool","Builtin","Comment","Eof","Error","EvalError","Exception","Ident","Int","Int","Interpreter","JEnv","JEnvRef","JError","JPair","JResult","JState","JVal","JValRef","LParen","Lambda","Macro","Nil","NotDefined","OsError","PRELUDE","Pair","Parser","Quote","Quote","RParen","SpecialForm","String","String","Symbol","SyntaxError","Token","TokenError","TokenIter","TokenValidator","TokenValue","Tokenizer","TypeError","Whitespace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","car","cdr","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cons","def","default","default","default","default","define","define_builtins","eq","eq","eq","eq","eq","eval","eval_file","eval_file","eval_str","eval_str","eval_tokens","eval_tokens","exec_prelude","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","input","into","into","into","into","into","into","into","into","into","into","into","into","into_ref","into_ref","is_list","is_list","iter","iter_list","jbool","jbool","jbuiltin","jbuiltin","jerrorval","jerrorval","jint","jint","jlambda","jlambda","jlist","jlist","jmacro","jmacro","jnil","jnil","jpair","jpair","jquote","jquote","jspecialform","jspecialform","jstring","jstring","jsymbol","jsymbol","lookup","lookup","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","next_token","next_token","parse_form","parse_forms","pos","pos","reason","set","to_int","to_owned","to_owned","to_owned","to_owned","to_owned","to_pair","to_string","to_string","to_string","tokenize","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lookup","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","position","reason"],"q":["jbschemejbscheme::JError",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Call a named <code>jbscheme</code> procedure.","","","","","","","","","","","","","","Create a global binding (variable definition).","Create <code>jbscheme</code> interpreter pre-loaded with builtins and …","","","","Create a new binding.","Create global bindings for builtin functions and macros.","","","","","","Evaluate a <code>jbscheme</code> expression. (All values are …","Evaluate a <code>jbscheme</code> script file, and return the value of …","","Evaluate a <code>jbscheme</code> script, and return the value of its …","","","","Execute the <code>jbscheme</code> prelude, which defines common …","","","","","","","","","","","","","","","","","","","","","","","Returns None when more input is expected based on …","","","","","","","","","","","","","","","","","","","Construct a <code>jbscheme</code> <code>bool</code> (always interned).","","Define a <code>jbscheme</code> builtin procedure.","","Construct a <code>jbscheme</code> <code>error</code> value.","","","","Construct a <code>jbscheme</code> <code>lambda</code>.","","Construct a <code>jbscheme</code> list (linked list made from <code>pair</code> and …","","Construct a <code>jbscheme</code> <code>macro</code>.","","Construct a <code>jbscheme</code> <code>nil</code> (always interned).","","Construct a <code>jbscheme</code> <code>pair</code> (cons cell).","","Construct a <code>jbscheme</code> <code>quote</code>.","","Define a <code>jbscheme</code> builtin special form.","","Construct a <code>jbscheme</code> <code>string</code> (may be interned).","","Construct a <code>jbscheme</code> <code>symbol</code> (always interned).","","Get value of binding in global environment.","Look for value of binding.","","","","","","Create a bare <code>jbscheme</code> [<code>Interpreter</code>], with no builtins or …","","","","","","","","","","","","","","","Change existing binding.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,2,2,3,3,2,1,1,3,2,3,0,0,0,0,0,0,0,0,0,3,2,2,2,1,1,0,2,0,2,3,3,2,2,3,2,1,0,0,0,0,0,0,1,3,4,5,6,7,8,1,9,2,3,10,11,12,4,5,6,7,8,1,9,2,3,10,11,12,4,9,9,8,1,9,2,3,8,1,9,2,3,9,4,4,7,8,11,8,4,8,1,9,2,3,4,4,7,4,7,4,7,4,8,1,1,9,2,2,3,10,12,12,4,5,6,7,8,1,9,2,3,10,11,12,11,4,5,6,7,8,1,9,2,3,10,11,12,8,2,9,2,9,2,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,8,8,1,9,2,3,4,5,6,7,8,10,11,12,13,6,5,5,10,12,12,8,2,8,1,9,2,3,2,1,2,12,6,4,5,6,7,8,1,9,2,3,10,11,12,4,5,6,7,8,1,9,2,3,10,11,12,8,4,5,6,7,8,1,9,2,3,10,11,12,10,14,14],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["jvalref",6],["str",15],["vec",3]],["jresult",6]],[[],["jvalref",6]],[[],["jvalref",6]],[[],["jenv",3]],[[],["jerror",4]],[[],["jpair",3]],[[],["jval",4]],[[],["tokenvalue",4]],[[]],[[]],[[]],[[]],[[]],[[["jvalref",6]]],[[["jvalref",6],["str",15]]],[[]],[[]],[[]],[[],["tokenvalidator",3]],[[["jvalref",6],["str",15]]],[[]],[[["jenv",3]],["bool",15]],[[["jerror",4]],["bool",15]],[[["jpair",3]],["bool",15]],[[["jval",4]],["bool",15]],[[["tokenvalue",4]],["bool",15]],[[["jvalref",6]],["jresult",6]],[[["asref",8],["path",3]],[["option",4],["jerror",4],["result",4]]],[[["asref",8],["path",3],["jenvref",6]],[["option",4],["jerror",4],["result",4]]],[[["str",15]],[["option",4],["jerror",4],["result",4]]],[[["str",15],["jenvref",6]],[["option",4],["jerror",4],["result",4]]],[[["tokeniter",8],["str",15],["box",3]],[["option",4],["jerror",4],["result",4]]],[[["str",15],["tokeniter",8],["box",3],["jenvref",6]],[["option",4],["jerror",4],["result",4]]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["string",3]],[["result",4],["option",4],["tokenerror",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["jenvref",6]],[[],["jvalref",6]],[[],["bool",15]],[[],["bool",15]],[[],[["result",4],["jlistiterator",3],["jerror",4]]],[[],[["result",4],["jlistiterator",3],["jerror",4]]],[[["bool",15]],["jvalref",6]],[[["bool",15]],["jvalref",6]],[[["string",3]],["jvalref",6]],[[["fn",8],["string",3],["rc",3]],["jvalref",6]],[[["jerror",4]],["jvalref",6]],[[["jerror",4]],["jvalref",6]],[[["i128",15]],["jvalref",6]],[[["i128",15]],["jvalref",6]],[[["jvalref",6],["vec",3],["string",3],["vec",3]],["jresult",6]],[[["jvalref",6],["string",3],["vec",3],["vec",3],["jenvref",6]],["jresult",6]],[[["jvalref",6],["vec",3]],["jvalref",6]],[[["jvalref",6],["vec",3]],["jvalref",6]],[[["jvalref",6],["vec",3],["string",3],["vec",3]],["jresult",6]],[[["jvalref",6],["string",3],["vec",3],["vec",3],["jenvref",6]],["jresult",6]],[[],["jvalref",6]],[[],["jvalref",6]],[[["jvalref",6]],["jvalref",6]],[[["jvalref",6]],["jvalref",6]],[[["jvalref",6]],["jvalref",6]],[[["jvalref",6]],["jvalref",6]],[[["string",3]],["jvalref",6]],[[["fn",8],["string",3],["rc",3]],["jvalref",6]],[[["string",3]],["jvalref",6]],[[["string",3]],["jvalref",6]],[[["string",3]],["jvalref",6]],[[["string",3]],["jvalref",6]],[[["str",15]],[["option",4],["jvalref",6]]],[[["str",15]],[["option",4],["jvalref",6]]],[[["jenv",3]],["bool",15]],[[["jerror",4]],["bool",15]],[[["jpair",3]],["bool",15]],[[["jval",4]],["bool",15]],[[["tokenvalue",4]],["bool",15]],[[]],[[["jstate",3],["str",15],["tokeniter",8],["box",3]]],[[["string",3]]],[[]],[[["option",4],["jenvref",6]]],[[["usize",15],["tokenvalue",4]]],[[]],[[["usize",15],["str",15]]],[[],[["result",4],["tokenerror",3],["token",3]]],[[],[["result",4],["tokenerror",3],["token",3]]],[[],[["result",4],["option",4],["parsererror",3]]],[[],[["result",4],["vec",3],["parsererror",3]]],null,null,null,[[["jvalref",6],["str",15]],[["jerror",4],["result",4]]],[[],[["result",4],["jerror",4],["i128",15]]],[[]],[[]],[[]],[[]],[[]],[[],[["jpair",3],["jerror",4],["result",4]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],[["result",4],["tokenerror",3],["vec",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["jresult",6]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null],"p":[[4,"JError"],[4,"JVal"],[4,"TokenValue"],[3,"Interpreter"],[3,"Parser"],[3,"Tokenizer"],[3,"JState"],[3,"JEnv"],[3,"JPair"],[3,"Token"],[3,"TokenValidator"],[3,"TokenError"],[8,"TokenIter"],[13,"SyntaxError"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};