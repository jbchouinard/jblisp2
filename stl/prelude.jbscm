(def true (eq? nil nil))

(def false (not true))

(def defmacro
    (macro (name params code)
        (list def name (list macro params code))))

(defmacro defn (name params code)
    (list def name (list fn params code)))

(defn display (x)
    (print (repr x)))

(defn assert (pred)
    (if pred () (raise (error "assertion"))))

(defn assert-msg (pred reason)
    (if pred () (raise (error reason))))

(defmacro apply (op args) (cons op args))

(defmacro let (sym val body)
    (list (list fn (list sym) body) val))
